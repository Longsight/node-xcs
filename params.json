{"name":"Node-xcs","tagline":"NodeJS implementation of Google's XMPP Connection Server","body":"Getting Started\r\n===============\r\nInstall with:\r\n```\r\nnpm install git+https://github.com/sainaetr/node-xcs.git\r\n```\r\nor\r\n```\r\nnpm install node-xcs\r\n```\r\n\r\nImport:\r\n```js\r\nvar Message = require('node-xcs').Message;\r\nvar Notification = require('node-xcs').Notification;\r\nvar Sender = require('node-xcs').Sender;\r\n```\r\nInitiate Sender:\r\n```js\r\nvar xcs = new Sender(projectId, apiKey);\r\n```\r\nBuild Notification:\r\n```js\r\nvar notification = new Notification(\"ic_we_notif\")\r\n\t.title(\"Hello world!\")\r\n\t.body(\"Here is a more detailed description\")\r\n\t.build();\r\n```\r\nBuild Message:\r\n```js\r\nvar message = new Message(\"messageId#1046\")\r\n\t.priority(\"high\")\r\n\t.dryRun(false)\r\n\t.addData(\"asp\",false)\r\n\t.addData(\"php\",true)\r\n\t.addData(\"vnp\",100)\r\n\t.deliveryReceiptRequested(true)\r\n\t.notification(notification)\r\n\t.build();\r\n```\r\nSend Message:\r\n```js\r\nxcs.sendNoRetry(message, to, function (err, messageId, to) {\r\n\tif (!err) {\r\n\t\tconsole.log('sent message to', to, 'with message_id =', messageId);\r\n\t} else {\r\n\t\tconsole.log('failed to send message');\r\n\t}\r\n});\r\n```\r\nFunctions\r\n=========\r\nSend Message\r\n------------\r\nUse `sendNoRetry` to send a message.\r\n```js\r\nxcs.sendNoRetry(message, to, [callback(error, messageId, to)]);\r\n```\r\nArgument\t\t\t| Details\r\n------------------- | -------\r\nmessage\t\t\t | Message to sent (with or without notification)\r\nto\t\t\t\t  | A single user, or topic\r\ncallback (optional) | `function(error, messageId, to)` called back individually for each message.\r\n\r\nEnd Connection\r\n--------------\r\n```js\r\nxcs.end;\r\n```\r\n\r\nEvents\r\n======\r\nEvents are defined as below.\r\n```js\r\nxcs.on('message', function(messageId, from, category, data)); // Messages received from client (excluding receipts)\r\nxcs.on('receipt', function(messageId, from, category, data)); // Only fired for messages where options.delivery_receipt_requested = true\r\n\r\nxcs.on('connected', console.log);\r\nxcs.on('disconnected', console.log);\r\nxcs.on('online', console.log);\r\nxcs.on('error', console.log);\r\n```\r\n\r\nExample\r\n=======\r\n```js\r\nvar Sender = require('node-xcs').Sender;\r\nvar Message = require('node-xcs').Message;\r\nvar Notification = require('node-xcs').Notification;\r\n\t\r\nvar xcs = new Sender(projectId, apiKey);\r\n\t\r\nxcs.on('message', function(messageId, from, category, data) {\r\n\tconsole.log('received message', arguments);\r\n}); \r\n\r\nxcs.on('receipt', function(messageId, from, category, data) {\r\n\tconsole.log('received receipt', arguments);\r\n});\r\n\t\r\nvar notification = new Notification(\"ic_we_notif\")\r\n\t.title(\"Hello world!\")\r\n\t.body(\"Here is a more detailed description\")\r\n\t.build();\r\n\t\r\nvar message = new Message(\"messageId#1046\")\r\n\t.priority(\"high\")\r\n\t.dryRun(false)\r\n\t.addData(\"asp\",false)\r\n\t.addData(\"php\",true)\r\n\t.addData(\"vnp\",100)\r\n\t.deliveryReceiptRequested(true)\r\n\t.notification(notification)\r\n\t.build();\r\n\t\r\nxcs.sendNoRetry(message, deviceId, function (err, messageId, to) {\r\n\tif (!err) {\r\n\t\tconsole.log('sent message to', to, 'with message_id =', messageId);\r\n\t} else {\r\n\t\tconsole.log('failed to send message');\r\n\t}\r\n});\r\n```\r\nEcho Client\r\n-----------\r\n```js\r\nxcs.on('message', function(_, from, __, data) {\r\n\txcs.send(from, data);\r\n});\r\n```\r\n\r\nNotes on XCS\r\n============\r\n* The library still being working on it, so there may be serious problems, use it at your own risk.\r\n* No events are emitted from XCS or this library when a device new registers: you'll have to send a message from the device and process it yourself\r\n* Occasionally, GCM performs load balancing, so the connection is sometimes restarted. This library handles this transparently, and your messages will be queued in these situations.\r\n* This library auto sends acks for receipts of sent messages, however google side receipt reporting is not reliable.\r\n\r\nDisclaimer\r\n-----------\r\nBased on a work at https://github.com/jacobp100/node-gcm-ccs\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}